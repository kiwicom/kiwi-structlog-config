stages:
  - build
  - test
  - release

include:
  - 'https://ci-files.skypicker.com/templates/build/pre_commit.yml'
  - 'https://ci-files.skypicker.com/templates/build/tox_init.yml'
  - 'https://ci-files.skypicker.com/templates/test/tox_tests.yml'
  - 'https://ci-files.skypicker.com/templates/release/pypi_upload.yml'


twine-upload:
  image:
    name: $CI_REGISTRY/platform/k8s-deploy-runner
    pull_policy: if-not-present
  variables:
    PYPI_REGISTRY: pungi.skypicker.com
    PIP_EXTRA_INDEX_URL: https://${PYPI_REGISTRY}/simple
    PYPI_CONFIG: |
      [distutils]
      index-servers = registry

      [registry]
      repository: https://${PYPI_REGISTRY}
      username: ${REGISTRY_USERNAME}
      password: ${REGISTRY_PASSWORD}
    NETRC_CONFIG: |
      machine ${PYPI_REGISTRY}
          login ${REGISTRY_USERNAME}
          password ${REGISTRY_PASSWORD}
    CRANE_RELEASE_TARGET: pypi
    TWINE_REGISTRY: https://pypi.org/
    REGISTRY_USERNAME: $PYPIORG_USERNAME
    REGISTRY_PASSWORD: $PYPIORG_PASSWORD
  script:
    - echo "$PYPI_CONFIG" > ~/.pypirc
    - echo "$NETRC_CONFIG" > ~/.netrc
    - pip install --upgrade pip
    - apk add --no-cache gcc python3-dev musl-dev libffi-dev
    - pip install twine
    - python setup.py sdist bdist_wheel
    - export release_error=0
    - deployment_id=$(ddannouncer.py idgen | tail -n 1) || true
    - ddannouncer.py --id=$deployment_id start || true
    - echo ${REGISTRY_USERNAME}
    - echo ${REGISTRY_PASSWORD}
    - sleep 1h
    - twine upload
      --verbose
      --username ${REGISTRY_USERNAME}
      --password ${REGISTRY_PASSWORD}
      --repository-url ${TWINE_REGISTRY}
      dist/* || export release_error=1
    - ddannouncer.py finish --id=$deployment_id --status=$release_error
    - exit $release_error


pypi_upload:
  when: manual
  variables:
    PYPI_CONFIG: |
      [distutils]
      index-servers = kiwi
      [kiwi]
      repository: https://pypi.skypicker.com/pypi/
      username: $PYPI_USERNAME
      password: $PYPI_PASSWORD


release-skypicker-unstable:
  stage: release
  image: python:3.10-alpine
  variables:
    VERSION_FILE: VERSION
    PYPI_CONFIG: |
      [distutils]
      index-servers = kiwi
      [kiwi]
      repository: https://pypi.skypicker.com/pypi/
      username: $PYPI_USERNAME
      password: $PYPI_PASSWORD
  script:
    - echo "`cat $VERSION_FILE`.dev$(date +'%s')" > $VERSION_FILE
    - echo "$PYPI_CONFIG" > ~/.pypirc
    - pip install wheel
    - python setup.py bdist_wheel --universal upload -r kiwi
  when: manual


pages:
  stage: release
  image: python:3.10-alpine
  script:
   - apk add --no-cache make
   - pip install -r requirements.txt -r test-requirements.txt -r docs-requirements.txt -e .
   - sphinx-apidoc --output-dir docs/kw --no-toc kw && make --directory=docs html
   - mv docs/_build/html public
  artifacts:
    paths:
     - public
  only:
   - master
